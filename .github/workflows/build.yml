name: build

on:
  push:
    tags:
      - '*'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        id: vars
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  build-darwin:
    runs-on: macos-latest
    needs: [version]
    env:
      MACOSX_DEPLOYMENT_TARGET: 14
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install nasm

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg builder
          ./builder/bootstrap-vcpkg.sh
          cp vcpkg/darwin-amd64-static.cmake builder/triplets/community
          cp vcpkg/darwin-arm64-static.cmake builder/triplets/community

      - name: Build libraries
        run: |
          ./builder/vcpkg install "libavif[dav1d]:darwin-amd64-static"
          ./builder/vcpkg install "libavif[dav1d]:darwin-arm64-static"

      - name: Zip binaries
        run: |
          cd $GITHUB_WORKSPACE/builder/installed/darwin-amd64-static/lib
          7z a -tzip -mx=9 $GITHUB_WORKSPACE/avif-go_darwin-amd64.zip *.a
          cd $GITHUB_WORKSPACE/builder/installed/darwin-arm64-static/lib
          7z a -tzip -mx=9 $GITHUB_WORKSPACE/avif-go_darwin-arm64.zip *.a

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-darwin
          path: "*.zip"

  build-linux-amd64:
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install nasm

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg builder
          ./builder/bootstrap-vcpkg.sh
          cp vcpkg/linux-amd64-static.cmake builder/triplets/community

      - name: Build libraries
        run: |
          ./builder/vcpkg install "libavif[dav1d]:linux-amd64-static"

      - name: Zip binaries
        run: |
          cd $GITHUB_WORKSPACE/builder/installed/linux-amd64-static/lib
          7z a -tzip -mx=9 $GITHUB_WORKSPACE/avif-go_linux-amd64.zip *.a

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-amd64
          path: "*.zip"

  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    needs: [version]
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install nasm

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg builder
          ./builder/bootstrap-vcpkg.sh
          cp vcpkg/linux-arm64-static.cmake builder/triplets/community

      - name: Build libraries
        run: |
          ./builder/vcpkg install "libavif[dav1d]:linux-arm64-static"

      - name: Zip binaries
        run: |
          cd $GITHUB_WORKSPACE/builder/installed/linux-arm64-static/lib
          7z a -tzip -mx=9 $GITHUB_WORKSPACE/avif-go_linux-arm64.zip *.a

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-arm64
          path: "*.zip"

  build-windows:
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install nasm gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg builder
          ./builder/bootstrap-vcpkg.sh
          cp vcpkg/windows-amd64-static.cmake builder/triplets/community

      - name: Build libraries
        run: |
          ./builder/vcpkg install "libavif[dav1d]:windows-amd64-static"

      - name: Zip binaries
        run: |
          cd $GITHUB_WORKSPACE/builder/installed/windows-amd64-static/lib
          7z a -tzip -mx=9 $GITHUB_WORKSPACE/avif-go_windows-amd64.zip *.a

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-windows
          path: "*.zip"

  release:
    runs-on: ubuntu-latest
    needs: [build-darwin, build-linux-amd64, build-linux-arm64, build-windows]
    permissions:
      contents: write
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Fetch artifact
        uses: actions/download-artifact@v4
        with:
          path: binaries
          merge-multiple: true

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Create the changelog
        run: |
          pnpm install -g release-it @release-it/conventional-changelog
          release-it --ci

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.version.outputs.VERSION }}
          tag: ${{ needs.version.outputs.VERSION }}
          bodyFile: CHANGELOG.md
          replacesArtifacts: true
          artifacts: binaries/*.zip